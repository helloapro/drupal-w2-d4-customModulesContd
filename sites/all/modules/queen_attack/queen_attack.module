<?php
function queen_attack_menu() {
    $items = array();
    $items['queen_attack'] = array(
            'title' => 'Queen Attack',
            'type' => MENU_NORMAL_ITEM,
            'access callback' => TRUE,
            'page callback' => 'drupal_get_form',
            'page arguments' => array('queen_attack_form'),
        );
    $items['queen_attack_success_page'] = array(
            'title' => 'Queen Attack Results',
            'type' => MENU_CALLBACK,
            'access callback' => TRUE,
            'page callback' => 'display_attack_results',
        );
    return $items;
}

function queen_attack_form_submit($form, &$form_state) {
    $queenX = $form_state['values']['queenX'];
    $queenY = $form_state['values']['queenY'];
    $pawnX = $form_state['values']['pawnX'];
    $pawnY = $form_state['values']['pawnY'];
    if (
    ($queenX == $pawnX) &&
    ($queenY == $pawnY)
    ) {
        form_error($form, t('Two pieces cannot be on the same square!'));
    } elseif (
        ($queenX == $pawnX) ||
        ($queenY == $pawnY) ||
        abs($queenX - $pawnX) == abs($queenY - $pawnY)
    ) {
        $_SESSION['attack_results'] = TRUE;
    } else {
        $_SESSION['attack_results'] = FALSE;
    }
    $form_state['redirect'] = 'queen_attack_success_page';
}

function display_attack_results() {
    $results = $_SESSION['attack_results'];
    if ($results) {
        return "Yep";
    } else {
        return "Nope";
    }
}

function queen_attack_form() {
    $form = array();
    $form['queenX'] = array(
            '#title' => 'Queen X',
            '#type' => 'textfield',
            '#description' => t('Enter a X coordinate for the Queen between 1 and 8.'),
            '#required' => TRUE,
            '#element_validate' => array('element_validate_integer_positive', 'element_validate_board'),
        );
    $form['queenY'] = array(
            '#title' => 'Queen Y',
            '#type' => 'textfield',
            '#description' => t('Enter a Y coordinate for the Queen between 1 and 8.'),
            '#required' => TRUE,
            '#element_validate' => array('element_validate_integer_positive', 'element_validate_board'),
        );
    $form['pawnX'] = array(
            '#title' => 'Pawn X',
            '#type' => 'textfield',
            '#description' => t('Enter a X coordinate for the Pawn between 1 and 8.'),
            '#required' => TRUE,
            '#element_validate' => array('element_validate_integer_positive', 'element_validate_board'),
        );
    $form['pawnY'] = array(
            '#title' => 'Pawn Y',
            '#type' => 'textfield',
            '#description' => t('Enter a Y coordinate for the Pawn between 1 and 8.'),
            '#required' => TRUE,
            '#element_validate' => array('element_validate_integer_positive', 'element_validate_board'),
        );
    $form['submit'] = array(
            '#type' => 'submit',
            '#value' => 'Attack!!!',
        );
    return $form;
}

function element_validate_board($element) {
    if ($element['#value'] > 8 || $element['#value'] < 1) {
        form_error($element, t('Number must be between 1 and 8.'));
    }
}
